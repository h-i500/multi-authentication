# quarkus.package.type=fast-jar

# ---
# ===== default (ブラウザログイン用) =====
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/demo-realm
quarkus.oidc.client-id=quarkus-client
quarkus.oidc.application-type=web-app
quarkus.http.auth.permission.protected.paths=/hello
quarkus.http.auth.permission.protected.policy=authenticated
quarkus.http.proxy.proxy-address-forwarding=true

# ===== Bearer 専用テナント (svc) =====
# quarkus.oidc."svc".auth-server-url=http://keycloak:8080/realms/demo-realm
# quarkus.oidc."svc".client-id=quarkus-client
# quarkus.oidc."svc".application-type=service

# Named tenant "service"（Bearer）
quarkus.oidc."service".auth-server-url=http://keycloak:8080/realms/demo-realm
quarkus.oidc."service".client-id=quarkus-client
quarkus.oidc."service".application-type=service

# /mashup は Bearer で要認証
quarkus.http.auth.permission.mashup.paths=/mashup
quarkus.http.auth.permission.mashup.policy=authenticated

# Rest Client ベースURL（Docker サービス名）
quarkus.rest-client."service-a".url=http://service-a:8080
quarkus.rest-client."service-b".url=http://service-b:8080

# デバッグ（必要なら）
# quarkus.log.category."io.quarkus.oidc".level=DEBUG
# quarkus.log.category."org.jboss.resteasy.reactive.client".level=DEBUG

# OIDCの詳細ログ（集約側）
quarkus.log.category."io.quarkus.oidc".level=DEBUG

# RESTクライアントのログ（リクエスト/レスポンスを確認）
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=10240
quarkus.log.category."org.jboss.resteasy.reactive.client".level=DEBUG

# 自分のアプリのログ
quarkus.log.category."org.example".level=DEBUG

# quarkus.oidc.tenant-selection.key=X-Quarkus-Tenant

